{"version":3,"sources":["components/Navigation.tsx","components/Pages/HomePage.tsx","components/Pages/ErrorPage.tsx","components/Pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["getActiveLink","isActive","classNames","Navigation","className","to","HomePage","ErrorPage","tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","find","tab","map","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGMA,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC7D,cAAe,CAAE,YAAaD,KAGnBE,EAAa,WACxB,OACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,0BChBGM,EAAW,WACtB,OACE,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,4BCJKG,EAAY,WACvB,OACE,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,iCCDFI,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MACFE,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,KAEhD,OAEE,qBAAKT,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKU,KAAI,SAAAD,GAAG,OACX,oBAEE,UAAQ,MACRb,UACEF,IAAW,KAAM,CACf,YAAae,EAAIR,KAAOI,IAL9B,SASE,cAAC,IAAD,CAAMR,GAAE,aAAQY,EAAIR,IAApB,SAA2BQ,EAAIP,SAR1BO,EAAIR,WAcjB,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EAEG,0CACGA,QADH,IACGA,OADH,EACGA,EAAaJ,UAIhB,mECnCDQ,EAAM,WACjB,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUhB,GAAG,eChBlDkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22f22333.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getActiveLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'is-active': isActive },\n);\n\nexport const Navigation = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getActiveLink}>Home</NavLink>\n          <NavLink to=\"/tabs\" className={getActiveLink}>Tabs</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home page</h1>\n      </div>\n    </div>\n  );\n};\n","export const ErrorPage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Tabs page</h1>\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={\n                  classNames(null, {\n                    'is-active': tab.id === tabId,\n                  })\n                }\n              >\n                <Link to={`../${tab.id}`}>{tab.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab\n            ? (\n              <>\n                {selectedTab?.content}\n              </>\n            )\n            : (\n              <>\n                Please select a tab\n              </>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/Pages/HomePage';\nimport { ErrorPage } from './components/Pages/ErrorPage';\nimport { TabsPage } from './components/Pages/TabsPage';\n\nexport const App = () => {\n  return (\n    <>\n      <Navigation />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}